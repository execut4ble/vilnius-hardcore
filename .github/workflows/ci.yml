name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - ".gitignore"
      - "*.md"
      - "LICENSE*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.CI_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.CI_DB_PASS }}
          POSTGRES_DB: ${{ secrets.CI_DB_NAME }}
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: ${{ secrets.CI_DB_URL }}
      TEST_USER: ${{ secrets.TEST_USER }}
      TEST_USER_PASS: ${{ secrets.TEST_USER_PASS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      # Run pg-restore
      - name: Postgres Backup Restore
        uses: tj-actions/pg-restore@v6
        with:
          database_url: ${{ secrets.CI_DB_URL }}
          backup_file: "tests/testdb.sql"

      - name: Run database migrations
        run: npx drizzle-kit push --force

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test
